#!/usr/bin/env python

import sys
import codecs

while 1:
 
 #First four bytes from app notify us of the message's length.
 text_length_bytes =  sys.stdin.read(4)

 #Unpack the text length WITHOUT using the struct.unpack.
 #NOTE: Python 3 has simple built-in functions that can be used in place of this line.
 text_length = sum(ord(c) << (i * 8) for i, c in enumerate(text_length_bytes[0][::-1]))

 #Get the message from the app.
 messFromApp = sys.stdin.read(text_length)
 
 #Message to return to the app.
 text = '{"text": "Message received."}'

 #Calculate length of the message you are sending, and do some formatting.
 inLength = hex(len(text)).replace('0x','')
 if len(inLength) < 1.5:
   inLength = '0'+inLength
 inLength = inLength + '000000'
 
 #Pack the message length WITHOUT using struct.pack.
 #Additionally, use a function that's available in both Python 2 and Python 3.
 inLength = codecs.decode(inLength, "hex_codec")

 #Write to the stream the message length and the message contents.
 sys.stdout.write(inLength)
 sys.stdout.write(text)
 sys.stdout.flush()
