#!/usr/bin/env python
import sys

while 1:
 #Length of message from app is in first 32 bits.
 text_length_bytes =  sys.stdin.read(4)

 #Change this length into a readable number WITHOUT using struct.
 text_length = sum(ord(c) << (i * 8) for i, c in enumerate(text_length_bytes[0][::-1]))
 
 #Now that we know the message's length, we can read it.
 messFromApp = sys.stdin.read(text_length)

 #We will send the received message (messFromApp) back to the app as string 'text'.
 text = messFromApp

 #Construct string 'text''s length in binary, again avoiding using struct.
 innLengthMod = hex(len(text)).replace('0x','')
 
 if len(innLengthMod) < 1.5:
  innLengthMod = '0'+innLengthMod
 temp = '\\x00\\x00\\x00'.replace('\\x','')
 innLengthMod = innLengthMod + temp
 innLengthMod = innLengthMod.decode('hex')

 #Put the message length in the stream first.
 sys.stdout.write(innLengthMod)

 #Then add the message.
 sys.stdout.write(text)
 sys.stdout.flush()
